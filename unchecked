    // language: metal2.4
    #include <metal_stdlib>
    #include <simd/simd.h>

    using metal::uint;

    struct _mslBufferSizes {
        uint size0;
        uint size1;
        uint size2;
    };

    typedef metal::float4 type_1[1];

    struct main_Input {
    };
    kernel void main_(
      metal::uint3 global_id [[thread_position_in_grid]]
    , metal::uint3 local_id [[thread_position_in_threadgroup]]
    , metal::uint3 num_workgroups [[threadgroups_per_grid]]
    , device type_1 const& A [[buffer(0)]]
    , device type_1 const& B [[buffer(1)]]
    , device type_1& C [[buffer(2)]]
    , constant _mslBufferSizes& _buffer_sizes [[buffer(3)]]
    ) {
        metal::float4 result_0_0_ = {};
        metal::float4 result_1_0_ = {};
        metal::float4 result_2_0_ = {};
        metal::float4 result_3_0_ = {};
        uint k = {};
        uint m = global_id.x;
        uint n = global_id.y;
        result_0_0_ = metal::float4(0.0, 0.0, 0.0, 0.0);
        result_1_0_ = metal::float4(0.0, 0.0, 0.0, 0.0);
        result_2_0_ = metal::float4(0.0, 0.0, 0.0, 0.0);
        result_3_0_ = metal::float4(0.0, 0.0, 0.0, 0.0);
        k = 0u;
        bool loop_init = true;
        while(true) {
            if (!loop_init) {
                uint _e198 = k;
                k = _e198 + 1u;
            }
            loop_init = false;
            uint _e31 = k;
            if (_e31 < 256u) {
            } else {
                break;
            }
            {
                uint _e39 = k;
                metal::float4 a_0_0_ = A[((m * 4u) * 256u) + (_e39 * 1u)];
                uint _e52 = k;
                metal::float4 a_1_0_ = A[(((m * 4u) + 1u) * 256u) + (_e52 * 1u)];
                uint _e65 = k;
                metal::float4 a_2_0_ = A[(((m * 4u) + 2u) * 256u) + (_e65 * 1u)];
                uint _e78 = k;
                metal::float4 a_3_0_ = A[(((m * 4u) + 3u) * 256u) + (_e78 * 1u)];
                uint _e85 = k;
                metal::float4 b_0_0_ = B[((_e85 * 4u) * 256u) + (n * 1u)];
                uint _e96 = k;
                metal::float4 b_0_1_ = B[(((_e96 * 4u) + 1u) * 256u) + (n * 1u)];
                uint _e109 = k;
                metal::float4 b_0_2_ = B[(((_e109 * 4u) + 2u) * 256u) + (n * 1u)];
                uint _e122 = k;
                metal::float4 b_0_3_ = B[(((_e122 * 4u) + 3u) * 256u) + (n * 1u)];
                metal::float4 _e136 = result_0_0_;
                result_0_0_ = _e136 + (a_0_0_.x * b_0_0_);
                metal::float4 _e140 = result_1_0_;
                result_1_0_ = _e140 + (a_1_0_.x * b_0_0_);
                metal::float4 _e144 = result_2_0_;
                result_2_0_ = _e144 + (a_2_0_.x * b_0_0_);
                metal::float4 _e148 = result_3_0_;
                result_3_0_ = _e148 + (a_3_0_.x * b_0_0_);
                metal::float4 _e152 = result_0_0_;
                result_0_0_ = _e152 + (a_0_0_.y * b_0_1_);
                metal::float4 _e156 = result_1_0_;
                result_1_0_ = _e156 + (a_1_0_.y * b_0_1_);
                metal::float4 _e160 = result_2_0_;
                result_2_0_ = _e160 + (a_2_0_.y * b_0_1_);
                metal::float4 _e164 = result_3_0_;
                result_3_0_ = _e164 + (a_3_0_.y * b_0_1_);
                metal::float4 _e168 = result_0_0_;
                result_0_0_ = _e168 + (a_0_0_.z * b_0_2_);
                metal::float4 _e172 = result_1_0_;
                result_1_0_ = _e172 + (a_1_0_.z * b_0_2_);
                metal::float4 _e176 = result_2_0_;
                result_2_0_ = _e176 + (a_2_0_.z * b_0_2_);
                metal::float4 _e180 = result_3_0_;
                result_3_0_ = _e180 + (a_3_0_.z * b_0_2_);
                metal::float4 _e184 = result_0_0_;
                result_0_0_ = _e184 + (a_0_0_.w * b_0_3_);
                metal::float4 _e188 = result_1_0_;
                result_1_0_ = _e188 + (a_1_0_.w * b_0_3_);
                metal::float4 _e192 = result_2_0_;
                result_2_0_ = _e192 + (a_2_0_.w * b_0_3_);
                metal::float4 _e196 = result_3_0_;
                result_3_0_ = _e196 + (a_3_0_.w * b_0_3_);
            }
        }
        metal::float4 _e210 = result_0_0_;
        C[((m * 4u) * 256u) + (n * 1u)] = _e210;
        metal::float4 _e222 = result_1_0_;
        C[(((m * 4u) + 1u) * 256u) + (n * 1u)] = _e222;
        metal::float4 _e234 = result_2_0_;
        C[(((m * 4u) + 2u) * 256u) + (n * 1u)] = _e234;
        metal::float4 _e246 = result_3_0_;
        C[(((m * 4u) + 3u) * 256u) + (n * 1u)] = _e246;
        return;
    }
